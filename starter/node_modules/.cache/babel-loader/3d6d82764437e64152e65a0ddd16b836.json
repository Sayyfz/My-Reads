{"ast":null,"code":"var _jsxFileName = \"D:\\\\Work\\\\Egy4wd\\\\MyReads\\\\starter\\\\src\\\\components\\\\Search.js\",\n    _s = $RefreshSig$();\n\nimport { Link } from 'react-router-dom';\nimport { useState, useCallback, useEffect } from 'react';\nimport Book from './Book';\nimport * as BooksAPI from '../BooksAPI';\nimport { debounce } from 'lodash';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Search = ({\n  onUpdateShelf,\n  getShelfByID\n}) => {\n  _s();\n\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [booksToShow, setBooksToShow] = useState([]);\n\n  const updateSearchQuery = event => {\n    setSearchQuery(event.target.value); // searchBooksLibrary(event.target.value);\n  }; // const searchBooksLibrary = useCallback(\n  //   debounce(async (searchQuery) => { \n  //       const response = await BooksAPI.search(searchQuery, 20);\n  //       const result = response && response.length? response : [];\n  //       setBooksToShow(result);\n  //   } , 500)\n  // , [] )\n\n\n  useEffect(() => {\n    const searchForBooks = async () => {\n      const response = BooksAPI.search(searchQuery);\n      !response || response.error;\n      console.log(response);\n    };\n\n    searchQuery && searchForBooks();\n  }, [searchQuery]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-books\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-books-bar\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        className: \"close-search\",\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-books-input-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Search by title, author, or ISBN\",\n          value: searchQuery,\n          onChange: updateSearchQuery\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-books-results\",\n      children: /*#__PURE__*/_jsxDEV(\"ol\", {\n        className: \"books-grid\",\n        children: booksToShow && booksToShow.length ? booksToShow.map(book => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\" \", /*#__PURE__*/_jsxDEV(Book, {\n              book: book,\n              onUpdateShelf: onUpdateShelf,\n              shelfName: getShelfByID(book.id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 61\n            }, this), \" \"]\n          }, book.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 42\n          }, this);\n        }) : /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"No results to show!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Search, \"Zh2azkvw8JuDGYXmHaIYg7AC5LQ=\");\n\n_c = Search;\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["D:/Work/Egy4wd/MyReads/starter/src/components/Search.js"],"names":["Link","useState","useCallback","useEffect","Book","BooksAPI","debounce","Search","onUpdateShelf","getShelfByID","searchQuery","setSearchQuery","booksToShow","setBooksToShow","updateSearchQuery","event","target","value","searchForBooks","response","search","error","console","log","length","map","book","id"],"mappings":";;;AAAA,SAAQA,IAAR,QAAmB,kBAAnB;AACA,SAASC,QAAT,EAAmBC,WAAnB,EAAgCC,SAAhC,QAAgD,OAAhD;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAO,KAAKC,QAAZ,MAA0B,aAA1B;AACA,SAAQC,QAAR,QAAuB,QAAvB;;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAACC,EAAAA,aAAD;AAAgBC,EAAAA;AAAhB,CAAD,KAAmC;AAAA;;AAK9C,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,CAAC,EAAD,CAA9C;AAEA,QAAM,CAACW,WAAD,EAAcC,cAAd,IAAgCZ,QAAQ,CAAC,EAAD,CAA9C;;AAEA,QAAMa,iBAAiB,GAAIC,KAAD,IAAW;AACjCJ,IAAAA,cAAc,CAACI,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAd,CADiC,CAEjC;AACH,GAHD,CAT8C,CAc9C;AACA;AAEA;AACA;AACA;AACA;AACA;;;AAEAd,EAAAA,SAAS,CAAC,MAAM;AAEZ,UAAMe,cAAc,GAAG,YAAY;AAC/B,YAAMC,QAAQ,GAAGd,QAAQ,CAACe,MAAT,CAAgBV,WAAhB,CAAjB;AACA,OAACS,QAAD,IAAaA,QAAQ,CAACE,KAAtB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAZ;AACH,KAJD;;AAMAT,IAAAA,WAAW,IAAIQ,cAAc,EAA7B;AACH,GATQ,EAWP,CAACR,WAAD,CAXO,CAAT;AAaA,sBACI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,8BACI,QAAC,IAAD;AACA,QAAA,EAAE,EAAC,GADH;AAEA,QAAA,SAAS,EAAC,cAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAOI;AAAK,QAAA,SAAS,EAAC,4BAAf;AAAA,+BACI;AACI,UAAA,IAAI,EAAC,MADT;AAEI,UAAA,WAAW,EAAC,kCAFhB;AAGI,UAAA,KAAK,EAAEA,WAHX;AAII,UAAA,QAAQ,EAAEI;AAJd;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAiBI;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA,6BACI;AAAI,QAAA,SAAS,EAAC,YAAd;AAAA,kBAEQF,WAAW,IACXA,WAAW,CAACY,MADZ,GAEIZ,WAAW,CAACa,GAAZ,CAAiBC,IAAD,IAAU;AACtB,8BAAS;AAAA,yCAAmB,QAAC,IAAD;AAAM,cAAA,IAAI,EAAEA,IAAZ;AAAkB,cAAA,aAAa,EAAElB,aAAjC;AAAgD,cAAA,SAAS,EAAEC,YAAY,CAACiB,IAAI,CAACC,EAAN;AAAvE;AAAA;AAAA;AAAA;AAAA,oBAAnB;AAAA,aAASD,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA,kBAAT;AACH,SAFD,CAFJ,gBAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAPZ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAjBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAiCH,CArED;;GAAMpB,M;;KAAAA,M;AAuEN,eAAeA,MAAf","sourcesContent":["import {Link} from 'react-router-dom'\r\nimport { useState, useCallback, useEffect} from 'react'\r\nimport Book from './Book'\r\nimport * as BooksAPI from '../BooksAPI'\r\nimport {debounce} from 'lodash'\r\n\r\nconst Search = ({onUpdateShelf, getShelfByID}) => {\r\n\r\n    \r\n\r\n   \r\n    const [searchQuery, setSearchQuery] = useState(\"\");\r\n    \r\n    const [booksToShow, setBooksToShow] = useState([]);\r\n\r\n    const updateSearchQuery = (event) => {\r\n        setSearchQuery(event.target.value);\r\n        // searchBooksLibrary(event.target.value);\r\n    };\r\n\r\n    // const searchBooksLibrary = useCallback(\r\n    //   debounce(async (searchQuery) => { \r\n\r\n    //       const response = await BooksAPI.search(searchQuery, 20);\r\n    //       const result = response && response.length? response : [];\r\n    //       setBooksToShow(result);\r\n    //   } , 500)\r\n    // , [] )\r\n\r\n    useEffect(() => {\r\n\r\n        const searchForBooks = async () => {\r\n            const response = BooksAPI.search(searchQuery);\r\n            !response || response.error\r\n            console.log(response);\r\n        };\r\n        \r\n        searchQuery && searchForBooks();\r\n    }\r\n\r\n    , [searchQuery]);\r\n \r\n    return (\r\n        <div className=\"search-books\">\r\n            <div className=\"search-books-bar\">\r\n                <Link\r\n                to=\"/\"\r\n                className=\"close-search\"\r\n                >\r\n                Close\r\n                </Link>\r\n                <div className=\"search-books-input-wrapper\">\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Search by title, author, or ISBN\"\r\n                        value={searchQuery}\r\n                        onChange={updateSearchQuery}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className=\"search-books-results\">\r\n                <ol className=\"books-grid\">\r\n                    {\r\n                        booksToShow &&\r\n                        booksToShow.length ? \r\n                            booksToShow.map((book) => {\r\n                                return ( <li key={book.id}> <Book book={book} onUpdateShelf={onUpdateShelf} shelfName={getShelfByID(book.id)}/> </li> ) \r\n                            }) :\r\n                            <h4>No results to show!</h4>\r\n                    }\r\n                </ol>\r\n                \r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Search;"]},"metadata":{},"sourceType":"module"}