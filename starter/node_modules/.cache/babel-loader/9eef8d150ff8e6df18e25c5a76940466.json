{"ast":null,"code":"var _jsxFileName = \"D:\\\\Work\\\\Egy4wd\\\\MyReads\\\\starter\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport { useState, useEffect, useCallback } from \"react\";\nimport { Routes, Route } from 'react-router-dom';\nimport Shelves from \"./components/Shelves\";\nimport Search from \"./components/Search\";\nimport * as BooksAPI from \"./BooksAPI\";\nimport _, { debounce } from 'lodash';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [allBooks, setAllBooks] = useState([]);\n\n  const updateShelf = async (book, shelf) => {\n    await BooksAPI.update(book, shelf);\n    getBooks();\n  };\n\n  const searchBooksLibrary = useCallback(debounce(async (searchQuery, setBooks) => {\n    const response = await BooksAPI.search(searchQuery.toLowerCase());\n    console.log(response);\n    setBooks(response);\n  }, 1000), []);\n\n  const getBookShelfByID = id => {\n    const targetBook = allBooks.filter(book => book.id === id);\n    return targetBook.length === 1 ? targetBook[0].shelf : \"none\";\n  };\n\n  const getBooks = async () => {\n    const response = await BooksAPI.getAll();\n    setAllBooks(response);\n    console.log(response);\n  };\n\n  useEffect(() => {\n    getBooks();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Shelves, {\n          books: allBooks,\n          onUpdateShelf: updateShelf\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/search\",\n        element: /*#__PURE__*/_jsxDEV(Search, {\n          onUpdateShelf: updateShelf,\n          onSearchRequest: searchBooksLibrary,\n          getShelfByID: getBookShelfByID\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"HhVZd/kf/s6+sgLIbFETnrBtEFY=\");\n\n_c = App;\n;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/Work/Egy4wd/MyReads/starter/src/App.js"],"names":["useState","useEffect","useCallback","Routes","Route","Shelves","Search","BooksAPI","_","debounce","App","allBooks","setAllBooks","updateShelf","book","shelf","update","getBooks","searchBooksLibrary","searchQuery","setBooks","response","search","toLowerCase","console","log","getBookShelfByID","id","targetBook","filter","length","getAll"],"mappings":";;;AAAA,OAAO,WAAP;AACA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,WAA9B,QAAiD,OAAjD;AACA,SAASC,MAAT,EAAiBC,KAAjB,QAA6B,kBAA7B;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAO,KAAKC,QAAZ,MAA0B,YAA1B;AACA,OAAOC,CAAP,IAAWC,QAAX,QAA0B,QAA1B;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAEb,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAC,EAAD,CAAxC;;AAEA,QAAMa,WAAW,GAAG,OAAOC,IAAP,EAAaC,KAAb,KAAuB;AACzC,UAAMR,QAAQ,CAACS,MAAT,CAAgBF,IAAhB,EAAqBC,KAArB,CAAN;AACAE,IAAAA,QAAQ;AACT,GAHD;;AAMA,QAAMC,kBAAkB,GACtBhB,WAAW,CACTO,QAAQ,CAAC,OAAOU,WAAP,EAAoBC,QAApB,KAAiC;AACtC,UAAMC,QAAQ,GAAG,MAAMd,QAAQ,CAACe,MAAT,CAAgBH,WAAW,CAACI,WAAZ,EAAhB,CAAvB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAZ;AACAD,IAAAA,QAAQ,CAACC,QAAD,CAAR;AACH,GAJO,EAIJ,IAJI,CADC,EAMT,EANS,CADb;;AASA,QAAMK,gBAAgB,GAAIC,EAAD,IAAQ;AAC/B,UAAMC,UAAU,GAAGjB,QAAQ,CAACkB,MAAT,CAAiBf,IAAD,IAAUA,IAAI,CAACa,EAAL,KAAYA,EAAtC,CAAnB;AACA,WAAOC,UAAU,CAACE,MAAX,KAAsB,CAAtB,GAA0BF,UAAU,CAAC,CAAD,CAAV,CAAcb,KAAxC,GAAgD,MAAvD;AACD,GAHD;;AAIA,QAAME,QAAQ,GAAG,YAAY;AAC3B,UAAMI,QAAQ,GAAG,MAAMd,QAAQ,CAACwB,MAAT,EAAvB;AACAnB,IAAAA,WAAW,CAACS,QAAD,CAAX;AAEAG,IAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAZ;AACD,GALD;;AAOApB,EAAAA,SAAS,CAAC,MAAM;AAEdgB,IAAAA,QAAQ;AAET,GAJQ,EAIN,EAJM,CAAT;AAOA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BAEE,QAAC,MAAD;AAAA,8BACE,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAC,GAAlB;AAAsB,QAAA,OAAO,eAAI,QAAC,OAAD;AAAS,UAAA,KAAK,EAAEN,QAAhB;AAA0B,UAAA,aAAa,EAAEE;AAAzC;AAAA;AAAA;AAAA;AAAA;AAAjC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,SAAZ;AAAsB,QAAA,OAAO,eAAI,QAAC,MAAD;AAAQ,UAAA,aAAa,EAAEA,WAAvB;AAAoC,UAAA,eAAe,EAAEK,kBAArD;AAAyE,UAAA,YAAY,EAAEQ;AAAvF;AAAA;AAAA;AAAA;AAAA;AAAjC;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;GA/CQhB,G;;KAAAA,G;AA+CR;AAED,eAAeA,GAAf","sourcesContent":["import \"./App.css\";\r\nimport { useState, useEffect, useCallback } from \"react\";\r\nimport { Routes, Route} from 'react-router-dom'\r\nimport Shelves from \"./components/Shelves\";\r\nimport Search from \"./components/Search\";\r\nimport * as BooksAPI from \"./BooksAPI\"\r\nimport _, {debounce} from 'lodash'\r\n\r\nfunction App() {\r\n  \r\n  const [allBooks, setAllBooks] = useState([]);\r\n\r\n  const updateShelf = async (book, shelf) => {\r\n    await BooksAPI.update(book,shelf);\r\n    getBooks();\r\n  };\r\n\r\n\r\n  const searchBooksLibrary = \r\n    useCallback(\r\n      debounce(async (searchQuery, setBooks) => { \r\n          const response = await BooksAPI.search(searchQuery.toLowerCase());\r\n          console.log(response);\r\n          setBooks(response);\r\n      } , 1000)\r\n    , [])\r\n\r\n  const getBookShelfByID = (id) => {\r\n    const targetBook = allBooks.filter((book) => book.id === id)\r\n    return targetBook.length === 1 ? targetBook[0].shelf : \"none\"\r\n  }\r\n  const getBooks = async () => {\r\n    const response = await BooksAPI.getAll();\r\n    setAllBooks(response);\r\n    \r\n    console.log(response);\r\n  };\r\n\r\n  useEffect(() => {\r\n\r\n    getBooks();\r\n\r\n  }, []);\r\n\r\n\r\n  return (\r\n    <div className=\"app\">\r\n\r\n      <Routes>\r\n        <Route exact path=\"/\" element = {<Shelves books={allBooks} onUpdateShelf={updateShelf} />}/>\r\n        <Route path=\"/search\" element = {<Search onUpdateShelf={updateShelf} onSearchRequest={searchBooksLibrary} getShelfByID={getBookShelfByID}/>}/>\r\n      </Routes>\r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}