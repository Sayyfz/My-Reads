{"ast":null,"code":"var _jsxFileName = \"D:\\\\Work\\\\Egy4wd\\\\MyReads\\\\starter\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport { useState, useEffect } from \"react\";\nimport { Routes, Route } from 'react-router-dom';\nimport Shelves from \"./components/Shelves\";\nimport Search from \"./components/Search\";\nimport * as BooksAPI from \"./BooksAPI\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [allBooks, setAllBooks] = useState([]);\n  const [currentlyReading, setCurrentlyReading] = useState([]);\n  const [wantToRead, setWantToRead] = useState([]);\n  const [read, setRead] = useState([]);\n\n  const updateShelf = (book, shelf) => {\n    if (shelf === \"currentlyReading\") {}\n  };\n\n  useEffect(() => {\n    const getBooks = async () => {\n      const response = await BooksAPI.getAll();\n      setAllBooks(response);\n    };\n\n    const getCurrentlyReading = async () => {// const response = await BooksAPI.get()\n    };\n\n    getBooks();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Shelves, {\n          currentlyReading: currentlyReading,\n          wantToRead: wantToRead,\n          read: read\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 36\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/search\",\n        element: /*#__PURE__*/_jsxDEV(Search, {\n          books: allBooks\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"Ko4MXSLrjQcSwOylLznQ0X+TzWY=\");\n\n_c = App;\n;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/Work/Egy4wd/MyReads/starter/src/App.js"],"names":["useState","useEffect","Routes","Route","Shelves","Search","BooksAPI","App","allBooks","setAllBooks","currentlyReading","setCurrentlyReading","wantToRead","setWantToRead","read","setRead","updateShelf","book","shelf","getBooks","response","getAll","getCurrentlyReading"],"mappings":";;;AAAA,OAAO,WAAP;AACA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,MAAT,EAAiBC,KAAjB,QAA6B,kBAA7B;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAO,KAAKC,QAAZ,MAA0B,YAA1B;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAEb,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,EAAD,CAAxC;AAEA,QAAM,CAACU,gBAAD,EAAmBC,mBAAnB,IAA0CX,QAAQ,CAAC,EAAD,CAAxD;AAEA,QAAM,CAACY,UAAD,EAAaC,aAAb,IAA8Bb,QAAQ,CAAC,EAAD,CAA5C;AAEA,QAAM,CAACc,IAAD,EAAOC,OAAP,IAAkBf,QAAQ,CAAC,EAAD,CAAhC;;AAEA,QAAMgB,WAAW,GAAG,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAEnC,QAAGA,KAAK,KAAK,kBAAb,EACA,CAEC;AACF,GAND;;AAQAjB,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMkB,QAAQ,GAAG,YAAY;AAC3B,YAAMC,QAAQ,GAAG,MAAMd,QAAQ,CAACe,MAAT,EAAvB;AACAZ,MAAAA,WAAW,CAACW,QAAD,CAAX;AACD,KAHD;;AAMA,UAAME,mBAAmB,GAAG,YAAY,CACtC;AACD,KAFD;;AAIAH,IAAAA,QAAQ;AAET,GAbQ,EAaN,EAbM,CAAT;AAgBA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE,QAAC,MAAD;AAAA,8BACE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,GAAZ;AAAgB,QAAA,OAAO,eAAI,QAAC,OAAD;AAAS,UAAA,gBAAgB,EAAET,gBAA3B;AAA6C,UAAA,UAAU,EAAEE,UAAzD;AAAqE,UAAA,IAAI,EAAEE;AAA3E;AAAA;AAAA;AAAA;AAAA;AAA3B;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,SAAZ;AAAsB,QAAA,OAAO,eAAI,QAAC,MAAD;AAAQ,UAAA,KAAK,EAAEN;AAAf;AAAA;AAAA;AAAA;AAAA;AAAjC;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;GA3CQD,G;;KAAAA,G;AA2CR;AAED,eAAeA,GAAf","sourcesContent":["import \"./App.css\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { Routes, Route} from 'react-router-dom'\r\nimport Shelves from \"./components/Shelves\";\r\nimport Search from \"./components/Search\";\r\nimport * as BooksAPI from \"./BooksAPI\"\r\n\r\nfunction App() {\r\n  \r\n  const [allBooks, setAllBooks] = useState([]);\r\n  \r\n  const [currentlyReading, setCurrentlyReading] = useState([]);\r\n\r\n  const [wantToRead, setWantToRead] = useState([]);\r\n\r\n  const [read, setRead] = useState([]);\r\n\r\n  const updateShelf = (book, shelf) => {\r\n\r\n    if(shelf === \"currentlyReading\")\r\n    {\r\n      \r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    const getBooks = async () => {\r\n      const response = await BooksAPI.getAll();\r\n      setAllBooks(response);\r\n    };\r\n\r\n    \r\n    const getCurrentlyReading = async () => {\r\n      // const response = await BooksAPI.get()\r\n    }\r\n\r\n    getBooks();\r\n\r\n  }, []);\r\n\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <Routes>\r\n        <Route path=\"/\" element = {<Shelves currentlyReading={currentlyReading} wantToRead={wantToRead} read={read} />}/>\r\n        <Route path=\"/search\" element = {<Search books={allBooks} />}/>\r\n      </Routes>\r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}