{"ast":null,"code":"var _jsxFileName = \"D:\\\\Work\\\\Egy4wd\\\\MyReads\\\\starter\\\\src\\\\components\\\\Search.js\",\n    _s = $RefreshSig$();\n\nimport { Link } from 'react-router-dom';\nimport { useState } from 'react';\nimport Book from './Book';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Search = ({\n  onUpdateShelf,\n  onSearchRequest,\n  getBookShelfByID\n}) => {\n  _s();\n\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [booksToShow, setBooksToShow] = useState([]);\n\n  const updateSearchQuery = event => {\n    setSearchQuery(event.target.value);\n    const searchBooksLibraryTimeout = setTimeout(() => {\n      const updateSearchResults = async () => {\n        const result = event.target.value === \"\" ? [] : await onSearchRequest(event.target.value, 40);\n        setBooksToShow(result);\n        console.log(\"request made\");\n        console.log(result);\n      };\n\n      clearTimeout(searchBooksLibraryTimeout);\n      updateSearchResults();\n    }, 500);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-books\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-books-bar\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        className: \"close-search\",\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-books-input-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Search by title, author, or ISBN\",\n          value: searchQuery,\n          onChange: updateSearchQuery\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-books-results\",\n      children: /*#__PURE__*/_jsxDEV(\"ol\", {\n        className: \"books-grid\",\n        children: booksToShow.length ? booksToShow.map(async book => {\n          const getShelf = async id => {\n            return await getBookShelfByID(id);\n          };\n\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(Book, {\n              book: book,\n              onUpdateShelf: onUpdateShelf,\n              shelfName: await getShelf(book.id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 41\n            }, this)\n          }, book.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 37\n          }, this);\n        }) : /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Results will show here!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Search, \"3aAeRcqp7AE7MRE1sStWfXsXgQc=\");\n\n_c = Search;\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["D:/Work/Egy4wd/MyReads/starter/src/components/Search.js"],"names":["Link","useState","Book","Search","onUpdateShelf","onSearchRequest","getBookShelfByID","searchQuery","setSearchQuery","booksToShow","setBooksToShow","updateSearchQuery","event","target","value","searchBooksLibraryTimeout","setTimeout","updateSearchResults","result","console","log","clearTimeout","length","map","book","getShelf","id"],"mappings":";;;AAAA,SAAQA,IAAR,QAAmB,kBAAnB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAACC,EAAAA,aAAD;AAAgBC,EAAAA,eAAhB;AAAiCC,EAAAA;AAAjC,CAAD,KAAwD;AAAA;;AAGnE,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAAC,EAAD,CAA9C;AAEA,QAAM,CAACQ,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,CAAC,EAAD,CAA9C;;AAEA,QAAMU,iBAAiB,GAAIC,KAAD,IAAW;AACjCJ,IAAAA,cAAc,CAACI,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAd;AAEA,UAAMC,yBAAyB,GAAGC,UAAU,CAAC,MAAM;AAE/C,YAAMC,mBAAmB,GAAG,YAAY;AAEpC,cAAMC,MAAM,GAAGN,KAAK,CAACC,MAAN,CAAaC,KAAb,KAAuB,EAAvB,GAA4B,EAA5B,GAAiC,MAAMT,eAAe,CAACO,KAAK,CAACC,MAAN,CAAaC,KAAd,EAAqB,EAArB,CAArE;AACAJ,QAAAA,cAAc,CAACQ,MAAD,CAAd;AAEAC,QAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACAD,QAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACH,OAPD;;AASAG,MAAAA,YAAY,CAACN,yBAAD,CAAZ;AACAE,MAAAA,mBAAmB;AACtB,KAb2C,EAazC,GAbyC,CAA5C;AAeH,GAlBD;;AAoBA,sBACI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,8BACI,QAAC,IAAD;AACA,QAAA,EAAE,EAAC,GADH;AAEA,QAAA,SAAS,EAAC,cAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAOI;AAAK,QAAA,SAAS,EAAC,4BAAf;AAAA,+BACI;AACI,UAAA,IAAI,EAAC,MADT;AAEI,UAAA,WAAW,EAAC,kCAFhB;AAGI,UAAA,KAAK,EAAEV,WAHX;AAII,UAAA,QAAQ,EAAEI;AAJd;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAiBI;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA,6BACI;AAAI,QAAA,SAAS,EAAC,YAAd;AAAA,kBAEQF,WAAW,CAACa,MAAZ,GACIb,WAAW,CAACc,GAAZ,CAAgB,MAAOC,IAAP,IAAgB;AAC5B,gBAAMC,QAAQ,GAAG,MAAOC,EAAP,IAAc;AAAC,mBAAO,MAAMpB,gBAAgB,CAACoB,EAAD,CAA7B;AAAkC,WAAlE;;AACA,8BACI;AAAA,mCACI,QAAC,IAAD;AAAM,cAAA,IAAI,EAAEF,IAAZ;AAAkB,cAAA,aAAa,EAAEpB,aAAjC;AAAgD,cAAA,SAAS,EAAG,MAAMqB,QAAQ,CAACD,IAAI,CAACE,EAAN;AAA1E;AAAA;AAAA;AAAA;AAAA;AADJ,aAASF,IAAI,CAACE,EAAd;AAAA;AAAA;AAAA;AAAA,kBADJ;AAKH,SAPD,CADJ,gBASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAXZ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAjBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAqCH,CAhED;;GAAMvB,M;;KAAAA,M;AAkEN,eAAeA,MAAf","sourcesContent":["import {Link} from 'react-router-dom'\r\nimport { useState } from 'react'\r\nimport Book from './Book'\r\n\r\nconst Search = ({onUpdateShelf, onSearchRequest, getBookShelfByID}) => {\r\n\r\n    \r\n    const [searchQuery, setSearchQuery] = useState(\"\");\r\n    \r\n    const [booksToShow, setBooksToShow] = useState([]);\r\n\r\n    const updateSearchQuery = (event) => {\r\n        setSearchQuery(event.target.value);\r\n        \r\n        const searchBooksLibraryTimeout = setTimeout(() => {\r\n\r\n            const updateSearchResults = async () => {\r\n\r\n                const result = event.target.value === \"\" ? [] : await onSearchRequest(event.target.value, 40);\r\n                setBooksToShow(result);\r\n\r\n                console.log(\"request made\")\r\n                console.log(result)\r\n            };\r\n\r\n            clearTimeout(searchBooksLibraryTimeout);\r\n            updateSearchResults();\r\n        }, 500);\r\n\r\n    };\r\n\r\n    return (\r\n        <div className=\"search-books\">\r\n            <div className=\"search-books-bar\">\r\n                <Link\r\n                to=\"/\"\r\n                className=\"close-search\"\r\n                >\r\n                Close\r\n                </Link>\r\n                <div className=\"search-books-input-wrapper\">\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Search by title, author, or ISBN\"\r\n                        value={searchQuery}\r\n                        onChange={updateSearchQuery}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className=\"search-books-results\">\r\n                <ol className=\"books-grid\">\r\n                    {\r\n                        booksToShow.length ? \r\n                            booksToShow.map(async (book) => { \r\n                                const getShelf = async (id) => {return await getBookShelfByID(id)}\r\n                                return(\r\n                                    <li key={book.id}>\r\n                                        <Book book={book} onUpdateShelf={onUpdateShelf} shelfName={ await getShelf(book.id)}/>\r\n                                    </li>\r\n                                )\r\n                            }) :\r\n                            <h4>Results will show here!</h4>\r\n                    }\r\n                </ol>\r\n                \r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Search;"]},"metadata":{},"sourceType":"module"}