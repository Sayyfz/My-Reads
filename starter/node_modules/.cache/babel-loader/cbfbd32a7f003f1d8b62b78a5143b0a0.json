{"ast":null,"code":"var _jsxFileName = \"D:\\\\Work\\\\Egy4wd\\\\MyReads\\\\starter\\\\src\\\\components\\\\Search.js\",\n    _s = $RefreshSig$();\n\nimport { Link } from 'react-router-dom';\nimport { useState } from 'react';\nimport Book from './Book';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Search = ({\n  books,\n  onUpdateShelf\n}) => {\n  _s();\n\n  const [searchQuery, setSearchQuery] = useState(\"\");\n\n  const authorsContainQuery = (authors, query) => {\n    for (let author of authors) {\n      if (author.toLowerCase().includes(query.toLowerCase())) return true;\n    }\n\n    return false;\n  };\n\n  const filteredBooks = query => {\n    return books.filter(book => book.title.toLowerCase().includes(query.toLowerCase()) || authorsContainQuery(book.authors, query));\n  };\n\n  const booksToShow = searchQuery === \"\" ? [] : filteredBooks(searchQuery);\n\n  const updateSearchQuery = event => {\n    setSearchQuery(event.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-books\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-books-bar\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        className: \"close-search\",\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-books-input-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Search by title, author, or ISBN\",\n          onChange: updateSearchQuery\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-books-results\",\n      children: /*#__PURE__*/_jsxDEV(\"ol\", {\n        className: \"books-grid\",\n        children: booksToShow.length !== 0 && booksToShow.map(book => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\" \", /*#__PURE__*/_jsxDEV(Book, {\n            book: book,\n            onUpdateShelf: onUpdateShelf\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 98\n          }, this), \" \"]\n        }, book.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 79\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Search, \"4/Qdl0R3tQNJqUS4eMrvY/uMU/4=\");\n\n_c = Search;\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["D:/Work/Egy4wd/MyReads/starter/src/components/Search.js"],"names":["Link","useState","Book","Search","books","onUpdateShelf","searchQuery","setSearchQuery","authorsContainQuery","authors","query","author","toLowerCase","includes","filteredBooks","filter","book","title","booksToShow","updateSearchQuery","event","target","value","length","map","id"],"mappings":";;;AAAA,SAAQA,IAAR,QAAmB,kBAAnB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAACC,EAAAA,KAAD;AAAQC,EAAAA;AAAR,CAAD,KAA4B;AAAA;;AAGvC,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAAC,EAAD,CAA9C;;AAEA,QAAMO,mBAAmB,GAAG,CAACC,OAAD,EAAUC,KAAV,KAAoB;AAC5C,SAAI,IAAIC,MAAR,IAAkBF,OAAlB,EACA;AACI,UAAGE,MAAM,CAACC,WAAP,GAAqBC,QAArB,CAA8BH,KAAK,CAACE,WAAN,EAA9B,CAAH,EACI,OAAO,IAAP;AACP;;AACD,WAAO,KAAP;AACH,GAPD;;AASA,QAAME,aAAa,GAAIJ,KAAD,IAAW;AAC7B,WAAON,KAAK,CAACW,MAAN,CAAeC,IAAD,IACjBA,IAAI,CAACC,KAAL,CAAWL,WAAX,GAAyBC,QAAzB,CAAkCH,KAAK,CAACE,WAAN,EAAlC,KACGJ,mBAAmB,CAACQ,IAAI,CAACP,OAAN,EAAeC,KAAf,CAFnB,CAAP;AAGH,GAJD;;AAMA,QAAMQ,WAAW,GAAGZ,WAAW,KAAK,EAAhB,GAAqB,EAArB,GAA0BQ,aAAa,CAACR,WAAD,CAA3D;;AAEA,QAAMa,iBAAiB,GAAIC,KAAD,IAAW;AACjCb,IAAAA,cAAc,CAACa,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAd;AACH,GAFD;;AAKA,sBACI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,8BACI,QAAC,IAAD;AACA,QAAA,EAAE,EAAC,GADH;AAEA,QAAA,SAAS,EAAC,cAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAOI;AAAK,QAAA,SAAS,EAAC,4BAAf;AAAA,+BACI;AACI,UAAA,IAAI,EAAC,MADT;AAEI,UAAA,WAAW,EAAC,kCAFhB;AAGI,UAAA,QAAQ,EAAEH;AAHd;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAgBI;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA,6BACI;AAAI,QAAA,SAAS,EAAC,YAAd;AAAA,kBAEQD,WAAW,CAACK,MAAZ,KAAuB,CAAvB,IAA4BL,WAAW,CAACM,GAAZ,CAAiBR,IAAD,iBAAU;AAAA,uCAAmB,QAAC,IAAD;AAAM,YAAA,IAAI,EAAEA,IAAZ;AAAkB,YAAA,aAAa,EAAEX;AAAjC;AAAA;AAAA;AAAA;AAAA,kBAAnB;AAAA,WAASW,IAAI,CAACS,EAAd;AAAA;AAAA;AAAA;AAAA,gBAA1B;AAFpC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAhBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA2BH,CAtDD;;GAAMtB,M;;KAAAA,M;AAwDN,eAAeA,MAAf","sourcesContent":["import {Link} from 'react-router-dom'\r\nimport { useState } from 'react'\r\nimport Book from './Book'\r\n\r\nconst Search = ({books, onUpdateShelf}) => {\r\n\r\n    \r\n    const [searchQuery, setSearchQuery] = useState(\"\");\r\n\r\n    const authorsContainQuery = (authors, query) => {\r\n        for(let author of authors)\r\n        {\r\n            if(author.toLowerCase().includes(query.toLowerCase()) )\r\n                return true;\r\n        }\r\n        return false;\r\n    };\r\n\r\n    const filteredBooks = (query) => {\r\n        return books.filter( (book) => \r\n            book.title.toLowerCase().includes(query.toLowerCase()) \r\n            || authorsContainQuery(book.authors, query) );\r\n    };\r\n    \r\n    const booksToShow = searchQuery === \"\" ? [] : filteredBooks(searchQuery);\r\n\r\n    const updateSearchQuery = (event) => {\r\n        setSearchQuery(event.target.value);\r\n    };\r\n        \r\n    \r\n    return (\r\n        <div className=\"search-books\">\r\n            <div className=\"search-books-bar\">\r\n                <Link\r\n                to=\"/\"\r\n                className=\"close-search\"\r\n                >\r\n                Close\r\n                </Link>\r\n                <div className=\"search-books-input-wrapper\">\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Search by title, author, or ISBN\"\r\n                        onChange={updateSearchQuery}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className=\"search-books-results\">\r\n                <ol className=\"books-grid\">\r\n                    {\r\n                        booksToShow.length !== 0 && booksToShow.map((book) => <li key={book.id}> <Book book={book} onUpdateShelf={onUpdateShelf}/> </li>)\r\n                    }\r\n                </ol>\r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Search;"]},"metadata":{},"sourceType":"module"}